<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unity on 小小的大肥的主页</title>
    <link>https://NYH-Dolphin.github.io/tags/unity/</link>
    <description>Recent content in Unity on 小小的大肥的主页</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 01 Apr 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://NYH-Dolphin.github.io/tags/unity/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Unity AssetBundle</title>
      <link>https://NYH-Dolphin.github.io/games/unity-assetbundle/</link>
      <pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://NYH-Dolphin.github.io/games/unity-assetbundle/</guid>
      <description>参考链接：AssetBundle详解 - 知乎 (zhihu.com)  1. AssetBundle 介绍  AssetBundle 是将资源使用 Unity 提供的一种用于存储资源的压缩格式打包后的集合 它可以存储任何一种 Unity 可以识别的资源，如模型，纹理图，音频，场景等资源，也可以加载开发者自定义的二进制文件 文件类型是 .assetbundle/.unity3d 它们先前被设计好，很容易就下载到我们的游戏或者场景当中  AssetBundle 开发流程  创建 Asset bundle，开发者在 unity 编辑器中通过脚本将所需要的资源打包成 AssetBundle 文件 上传服务器，开发者将打包好的 AssetBundle 文件上传至服务器中，使得游戏客户端能够获取当前的资源，进行游戏的更新 下载 AssetBundle，首先将其下载到本地设备中，然后再通过 AssetBudle 的加载模块将资源加到游戏之中 加载，通过 Unity 提供的 API 可以加载资源里面包含的模型、纹理图、音频、动画、场景等来更新游戏客户端 卸载 AssetBundle，卸载之后可以节省内存资源，并且要保证资源的正常更新  2. AssetBundle 多平台打包 创建 AssetBundle  只有在 Asset 窗口中的资源才可以打包，先以 Prefab 的形式保存 单击要打包的 Prefab，在 Inspector 窗口右下角属性窗口底部会有一个 AssetBundle 的创建工具，直接创建  名称固定为小写，如果使用了大写字母之后，系统会自动转换为小写格式    打包 AssetBundle AssetBundle 创建之后需要导出，这一个过程就需要编写相应的代码实现</description>
    </item>
    
    <item>
      <title>Unity 行走与鼠标视角移动</title>
      <link>https://NYH-Dolphin.github.io/games/unity-%E8%A1%8C%E8%B5%B0%E4%B8%8E%E9%BC%A0%E6%A0%87%E8%A7%86%E8%A7%92%E7%A7%BB%E5%8A%A8/</link>
      <pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://NYH-Dolphin.github.io/games/unity-%E8%A1%8C%E8%B5%B0%E4%B8%8E%E9%BC%A0%E6%A0%87%E8%A7%86%E8%A7%92%E7%A7%BB%E5%8A%A8/</guid>
      <description>1. 行走部分 WASD 控制行走 public float fMoveSpeed = 10f; // WASD移动速度  void Update(){ KeyBoardControl(); } private void KeyBoardControl() { if (Input.GetKey(KeyCode.W)) { transform.Translate(Vector3.forward * fMoveSpeed * Time.deltaTime); } if (Input.GetKey(KeyCode.S)) { transform.Translate(Vector3.back * fMoveSpeed * Time.deltaTime); } if (Input.GetKey(KeyCode.A)) { transform.Translate(Vector3.up * fMoveSpeed * Time.deltaTime); } if (Input.GetKey(KeyCode.D)) { transform.Translate(-1 * Vector3.up * fMoveSpeed * Time.deltaTime); } } 鼠标点击移动到指定位置 待补充
2. 鼠标移动视角部分 左右移动转动物体，上下移动转动摄像机 注意的问题是，上下移动不能转动物体，不然视角会转飞
public float fRotateSpeed = 200; // 视角移动速度 private float fLastPosX; // 上一次鼠标的位置 x private float fLastPosY; // 上一次鼠标的位置 y private float fRange = 0.</description>
    </item>
    
    <item>
      <title>Unity TMP 设置中文字体</title>
      <link>https://NYH-Dolphin.github.io/games/unity-tmp-%E8%AE%BE%E7%BD%AE%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93/</link>
      <pubDate>Tue, 29 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://NYH-Dolphin.github.io/games/unity-tmp-%E8%AE%BE%E7%BD%AE%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93/</guid>
      <description>为了解决 TMP 不支持中文字体的情况，采取以下方式
1. 找到一个中文常见汉字的文档 这里给出一个链接：中文7000常用文字
2. 找到一个Font素材 在网上可以找到一些丰富的字体素材
或者本地可以下载一些字体文件，一般在 C:/Windows/Fonts 存放了一些常见字体
将想要使用的素材拖入 Unity 即可
3. 使用 TMP 创建字体 asset 打开 Window/TextMeshPro/Font Asset Creator
将字体文件拖入 Source Font File，将下载的中文常见汉字文档拖入 Character File
注意设置 Atlas Resolution，复杂的汉字需要最高的分辨率，也就是 8192 x 8192，如果选择了小的分辨率，最后可能无法显示，其它的设置可以参考截图下面的示例，也可以自行修改
配置完成后，点击 Generate Font Atlas，由于文字个数很多，可能需要相当长的一段时间才能完成生成
完成好后，旁边有一个 Save 按钮，将导出的 Font Asset 存放在指定位置即可
4. 使用 Font Asset 使用时，在创建了 TMP GameObject 的地方，把生成的 Font Asset 拖入到指定位置即可使用</description>
    </item>
    
  </channel>
</rss>