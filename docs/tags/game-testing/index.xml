<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Game Testing on 小小的大肥的主页</title>
    <link>https://NYH-Dolphin.github.io/tags/game-testing/</link>
    <description>Recent content in Game Testing on 小小的大肥的主页</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 15 Apr 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://NYH-Dolphin.github.io/tags/game-testing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lecture1 About Game Testing</title>
      <link>https://NYH-Dolphin.github.io/notes/lecture1-about-game-testing/</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://NYH-Dolphin.github.io/notes/lecture1-about-game-testing/</guid>
      <description>Lecture1 About Game Testing  http://testbook.gamedev.net/
 1. Content of the Book  Part I &amp;ldquo;About Game Testing&amp;rdquo;  Introduces the reader to game testing in terms of culture, philosophies, and the contribution testing makes to the final game release that everyone.   Part II &amp;ldquo;Making Games&amp;rdquo;  Reveals how an individual contributes to the overall game project. This includes the different kinds of roles and responsibilities that are required of testers through various stages of the development and production of game software.</description>
    </item>
    
    <item>
      <title>Lecture2 Making Games</title>
      <link>https://NYH-Dolphin.github.io/notes/lecture2-making-games/</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://NYH-Dolphin.github.io/notes/lecture2-making-games/</guid>
      <description>Lecture2 Making Games 1. The Game Team 2. The Game Production Cycle </description>
    </item>
    
    <item>
      <title>Lecture3 Testing Fundamentals</title>
      <link>https://NYH-Dolphin.github.io/notes/lecture3-testing-fundamentals/</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://NYH-Dolphin.github.io/notes/lecture3-testing-fundamentals/</guid>
      <description>Lecture3 Testing Fundamentals 1. Software Quality Game Quality Measurement Six Sigma  sigma level: defects per million lines of code, excluding comments  Phase Containment Phase containment is the ability to detect faults in the project phase in which they were introduced.
Phase Containment Effectiveness (PCE) is a measure of how well that is being done.
 If this practice is useful for understanding how well the team is capturing defects in the game code, it should also be applied to the work produced by the testers.</description>
    </item>
    
    <item>
      <title>Lecture4 Testing Techniques</title>
      <link>https://NYH-Dolphin.github.io/notes/lecture4-testing-techniques/</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://NYH-Dolphin.github.io/notes/lecture4-testing-techniques/</guid>
      <description>Lecture4 Testing Techniques 1. Combinatorial Testing Pairwise combinatorial testing is a way to find defects and gain confidence in the game software while keeping the test sets small relative to the amount of functionality they cover
 that each value you use for testing needs to be combined at least once with each other value of the remaining parameters  Parameters Parameters are the individual elements of the game that you want to include in your combinatorial tests</description>
    </item>
    
    <item>
      <title>Lecture5 More Effective Testing</title>
      <link>https://NYH-Dolphin.github.io/notes/lecture5-more-effective-testing/</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://NYH-Dolphin.github.io/notes/lecture5-more-effective-testing/</guid>
      <description>Lecture5 More Effective Testing 1. Defect Triggers Orthogonal Defect Classification (ODC) includes a set of Defect Triggers to categorize the way defects are caused to appear. These same triggers can be used to classify tests as well as defects. Test suites that do not account for each of the triggers will be incapable of revealing all of the defects in the game.
Operating Regions Game operation can be broken down into four stages</description>
    </item>
    
  </channel>
</rss>